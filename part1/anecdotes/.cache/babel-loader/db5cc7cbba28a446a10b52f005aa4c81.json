{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programacion\\\\FullStackMooc\\\\CursoFullStack\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  const clickHandler = props.clickHandler;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: clickHandler,\n    children: props.buttonText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = props => {\n  const renderStatistics = [];\n  props.statistics.forEach(statistic => {\n    renderStatistics.push( /*#__PURE__*/_jsxDEV(Statistic, {\n      name: statistic.name,\n      value: statistic.value\n    }, statistic.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 27\n    }, this));\n  });\n\n  if (props.clicks > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: renderStatistics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst Statistic = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 30\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 5\n}, this);\n\n_c3 = Statistic;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const buttonGoodFeedback = () => {\n    setGood(good + 1);\n  };\n\n  const buttonNeutralFeedback = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const buttonBadFeedback = () => {\n    setBad(bad + 1);\n  };\n\n  const all = good + neutral + bad;\n  const average = good > 0 || bad > 0 ? (good - bad) / all : 0;\n  const positive = good > 0 ? good * 100 / all + \"%\" : 0;\n  const statistics = [{\n    name: \"Good\",\n    value: good\n  }, {\n    name: \"Neutral\",\n    value: neutral\n  }, {\n    name: \"Bad\",\n    value: bad\n  }, {\n    name: \"All\",\n    value: all\n  }, {\n    name: \"Average\",\n    value: average\n  }, {\n    name: \"Positive\",\n    value: positive\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: buttonGoodFeedback,\n      buttonText: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: buttonNeutralFeedback,\n      buttonText: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: buttonBadFeedback,\n      buttonText: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      statistics: statistics,\n      clicks: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Statistic\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","props","clickHandler","buttonText","Statistics","renderStatistics","statistics","forEach","statistic","push","name","value","clicks","Statistic","App","good","setGood","neutral","setNeutral","bad","setBad","buttonGoodFeedback","buttonNeutralFeedback","buttonBadFeedback","all","average","positive"],"sources":["D:/Programacion/FullStackMooc/CursoFullStack/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\n\nconst Button = (props) => {\n  const clickHandler = props.clickHandler\n  return (\n    <button onClick={clickHandler}>{props.buttonText}</button>\n  )\n}\n\nconst Statistics = (props) => {\n  const renderStatistics = []\n  props.statistics.forEach((statistic) => {\n    renderStatistics.push(<Statistic key={statistic.name} name={statistic.name} value={statistic.value}/>);\n  })\n  if (props.clicks > 0) {\n    return (\n      <div>\n        <h1>Statistics</h1>\n        <table>\n        {renderStatistics}\n        </table>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h1>Statistics</h1>\n      <p>No feedback given</p>\n    </div>\n  )\n}\n\nconst Statistic = (props) => (\n    <tr><td>{props.name}</td><td>{props.value}</td></tr>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const buttonGoodFeedback = () => {\n    setGood(good + 1)\n  }\n  const buttonNeutralFeedback = () => {\n    setNeutral(neutral + 1)\n  }\n  const buttonBadFeedback = () => {\n    setBad(bad + 1)\n  }\n  const all = good + neutral + bad\n  const average = (good > 0 || bad > 0) ? (good - bad) / all : 0\n  const positive = good > 0 ? good * 100 / all + \"%\" : (0)\n  const statistics = [\n    {\n      name: \"Good\",\n      value: good\n    },\n    {\n      name: \"Neutral\",\n      value: neutral\n    },\n    {\n      name: \"Bad\",\n      value: bad\n    },\n    {\n      name: \"All\",\n      value: all\n    },\n    {\n      name: \"Average\",\n      value: average\n    },\n    {\n      name: \"Positive\",\n      value: positive\n    }\n\n  ]\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button clickHandler={buttonGoodFeedback} buttonText=\"Good\"></Button>\n      <Button clickHandler={buttonNeutralFeedback} buttonText=\"Neutral\"></Button>\n      <Button clickHandler={buttonBadFeedback} buttonText=\"Bad\"></Button>\n      <Statistics statistics={statistics} clicks={all}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}